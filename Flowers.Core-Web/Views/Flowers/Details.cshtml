@{
	Layout = "_ProductDetailsLayout";
}

@using Flowers.CoreWeb.Models.Flowers
@model FlowersDetailsViewModel


<div class="primary_block row">

	<div class="pb-left-column col-sm-4 col-md-4 col-lg-4">

		@{
			Html.RenderPartial("_ProductImagesFotorama", Model.ProductImages);
		}

	</div>

	<div class="pb-right-column col-sm-8 col-md-8 col-lg-8">
		<h1 itemprop="name">
			@Model.Flower.Name
		</h1>

		<div class="box-info-product">
			<div class="content_prices clearfix">

				<div class="all-price-info">
					<p class="our_price_display asterisk" itemprop="offers" itemscope="">
						<span id="our_price_display" itemprop="price" content="16" class="new-price">
							@if (Model.Flower.FlowerVariants.Any())
							{
								var max = Model.Flower.FlowerVariants.Max(t => t.Price);
								var min = Model.Flower.FlowerVariants.Min(t => t.Price);

								if (max == min)
								{
									@min.ToString("C")

								}
								else
								{
									<text>
									@min.ToString("C")
									-
									@max.ToString("C")

									</text>

								}
							}
						</span>
					</p>
				</div>

				<div class="clear"></div>
			</div>

			<div class="product_attributes clearfix">

				<div id="attributes">
					@if (Model.Flower.Colors.Length > 0)
					{
						<fieldset class="attribute_fieldset">
							<label class="attribute_label">
								Цветовая гамма&nbsp;
							</label>
							<div class="attribute_list">
								<ul id="color_to_pick_list">
									@foreach (var item in Model.Flower.Colors)
									{
										<li>
											<span href="#" style="background: @item; opacity: 1;">
											</span>
										</li>		}
								</ul>

							</div>
							<!-- end attribute_list -->
						</fieldset>
					}
					<fieldset class="attribute_fieldset">
						<label class="attribute_label">
							Размеры:
						</label>
						<div class="attribute_list">
							<ul>
								@foreach (var item in Model.Flower.FlowerVariants.OrderBy(t => t.Size))
								{
									<li>
										@(item.Size.HasValue ? item.Size.Value + " см" : "") - @item.Price.ToString("C")
									</li>	}
							</ul>
						</div>
					</fieldset>
					<fieldset class="attribute_fieldset">
						<div class="attribute_list">
							<ul class="note">
								<li>
									* Цены на цветы могут изменяться в зависимости от курса доллара.
								</li>
								<li>
									* Конечную цену уточняйте у менеджера
								</li>
							</ul>
						</div>
					</fieldset>
				</div>
			</div>

			<p>
				@Model.Flower.Description
			</p>

		</div>
	</div>

</div>

<section class="page-product-box blockproductscategory">
	<h3 class="productscategory_h3 page-product-heading">
		Другие товары
	</h3>
	<div id="productscategory_list" class="clearfix">
		<div class="bx-wrapper">
			<div class="bx-viewport">
				<ul class="product-list">

					@foreach (var item in Model.OtherProducts)
					{
						var link = $"/{item.Type.ToString().ToLower()}/{item.Id}";
						<li class="product-box item">
							<div class="product-container">
								<div class="product-image">
									<a href="@link"
									   class="lnk_img product-image"
									   title="@item.Name">

										@{ Html.RenderPartial("_ProductImage", item); }

									</a>
								</div>
								<div class="product-info">
									<h5 itemprop="name" class="product-name">
										<a href="@link"
										   title="@item.Name">

											@item.Name
										</a>
									</h5>
									<p class="price_display">

										<span class="price">
											@if (item.MinPrice > 0)
											{
												if (item.MaxPrice > 0)
												{
													<text>от</text>		
												}

												@item.MinPrice.ToString("C")
											}
										</span>
									</p>
								</div>

							</div>

						</li>			
						}

				</ul>
			</div>
		</div>
	</div>
</section>



